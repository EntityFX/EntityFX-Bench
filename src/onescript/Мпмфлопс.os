Перем хЗнач;
Перем аЗнач;
Перем бЗнач;
Перем цЗнач;
Перем дЗнач;
Перем еЗнач;
Перем фЗнач;
Перем гЗнач;
Перем шЗнач;
Перем жЗнач;
Перем кЗнач;
Перем лЗнач;
Перем мЗнач;
Перем оЗнач;
Перем пЗнач;
Перем куЗнач;
Перем рЗнач;
Перем сЗнач;
Перем тЗнач;
Перем юЗнач;
Перем вЗнач;
Перем ввЗнач;
Перем уЗнач;

Перем новДанные;

Процедура триадаОгромная(размер, а, б, ц, д, е, ф, г, ш, ж, к, л,
		м, о, п, ку, р, с, т, ю, в, вв, у, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + а) * б - (х[ин] + ц) * д + (х[ин] + е) * ф -
			(х[ин] + г) * ш + (х[ин] + ж) * к - (х[ин] + л) * м +
			(х[ин] + о) * п - (х[ин] + ку) * р + (х[ин] + с) * т -
			(х[ин] + ю) * в + (х[ин] + вв) * у;
	КонецЦикла;
КонецПроцедуры

Процедура триадаСредняя(размер, а, б, ц, д, е, ф, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + а) * б - (х[ин] + ц) * д + (х[ин] + е) * ф;
	КонецЦикла;
КонецПроцедуры

Процедура триада(размер, а, б, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + а) * б;
	КонецЦикла;
КонецПроцедуры

Процедура триадаКонстОгромная(размер, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + аЗнач) * бЗнач - (х[ин] + цЗнач) * дЗнач + (х[ин] + еЗнач) * фЗнач -
			(х[ин] + гЗнач) * шЗнач + (х[ин] + жЗнач) * кЗнач - (х[ин] + лЗнач) * мЗнач +
			(х[ин] + оЗнач) * пЗнач - (х[ин] + куЗнач) * рЗнач + (х[ин] + сЗнач) * тЗнач -
			(х[ин] + юЗнач) * вЗнач + (х[ин] + ввЗнач) * уЗнач;
	КонецЦикла;
КонецПроцедуры

Процедура триадаКонстСтредняя(размер, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + аЗнач) * бЗнач - (х[ин] + цЗнач) * дЗнач + (х[ин] + еЗнач) * фЗнач;
	КонецЦикла;
КонецПроцедуры

Процедура триадаКонст(размер, х)
	Для ин = 0 По размер - 1 Цикл
		х[ин] = (х[ин] + аЗнач) * бЗнач;
	КонецЦикла;
КонецПроцедуры

Функция получитьОп(часть)
	Если часть = 0 Тогда
		Возврат 2;
	ИначеЕсли часть = 1 Тогда
		Возврат 8;
	ИначеЕсли часть = 2 Тогда
		Возврат 32;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Процедура иницХЦпу(value, хЦпу)
	размер = хЦпу.Количество() - 1;
	Для i = 0 По размер Цикл
		хЦпу[i] = value;
	КонецЦикла;
КонецПроцедуры

Функция проверить(хЦпу, слов, новДанные)
	ок1 = Истина;
	первый = хЦпу[0];
	
	Если первый = новДанные Тогда
		ок1 = Ложь;
	КонецЕсли;
	
	Для i = 0 По слов - 1 Цикл
		Если первый <> хЦпу[i] Тогда
			ок1 = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ок1;
КонецФункции

Функция запуститьТесты(слов, повторы, смещение, часть, хЦпу)
	секунд = ТекущаяУниверсальнаяДатаВМиллисекундах() / 1000.0;
	сл = слов;
	
	хцп = Новый Массив;
	Для ин = смещение * сл По хЦпу.Количество() - 1 Цикл
		хцп.Добавить(хЦпу[ин]);
	КонецЦикла;
	
	Для ин = 0 По повторы - 1 Цикл
		Если часть = 0 Тогда
			триада(сл, аЗнач, хЗнач, хцп);
		ИначеЕсли часть = 1 Тогда
			триадаСредняя(сл, аЗнач, бЗнач, цЗнач, дЗнач, еЗнач, фЗнач, хцп);
		ИначеЕсли часть = 2 Тогда
			триадаОгромная(сл, аЗнач, бЗнач, цЗнач, дЗнач, еЗнач, фЗнач, гЗнач, шЗнач,
				жЗнач, кЗнач, лЗнач, мЗнач, оЗнач, пЗнач, куЗнач,
				рЗнач, сЗнач, тЗнач, юЗнач, вЗнач, ввЗнач, уЗнач, хцп);
		КонецЕсли;
	КонецЦикла;
	хЦпу= хцп;
	Возврат ТекущаяУниверсальнаяДатаВМиллисекундах() / 1000.0 - секунд;
КонецФункции

Процедура запуститьВсё(числоПовторов, начСлов, частьС, калибровать, заглавие, заголовок)
	размерХ = 0;
	мфлопс = 0.0;
	тестыОк = Ложь;
	секунд = ТекущаяУниверсальнаяДатаВМиллисекундах() / 1000.0;
	начПовт = числоПовторов;

	Сообщить("##############################################");
	Сообщить("");
	Сообщить(СтрШаблон("  %1, %2 Потоков, %3", заглавие, 1, 1));
	Сообщить("");
	Сообщить("  Тест             4 Байт  Опер/   Повторов     Секунд   МФлопс         Первые  Всё");
	Сообщить("                    Слов   Слово    всего                           Результаты  Ок");

	
	Для часть = 0 По частьС - 1 Цикл
		слов = начСлов;
		повторы = начПовт;
		Для p = 0 По частьС - 1 Цикл
			размерХ = слов * 4;
			
			// Allocate arrays for host CPU
			хЦпу = Новый Массив(размерХ);
			Для Инд = 0 По хЦпу.Количество() - 1 Цикл
				хЦпу[Инд] = 0;
			КонецЦикла;
			
			Если калибровать Тогда
				конецСекунд = запуститьТесты(слов, повторы, новДанные, часть, хЦпу);
				повторы = Цел(повторы * 15.0 / конецСекунд);
				начПовт = повторы;
				
				калибровать = Ложь
			КонецЕсли;
			
			тестСекунд = запуститьТесты(слов, повторы, новДанные, часть, хЦпу);
			оп = получитьОп(часть);
			
			фмопс = слов * оп;
			мфлопс = повторы * фмопс / 1000000.0 / тестСекунд;
			секунд = секунд + тестСекунд;
			
			// Print результатs
			результат = СтрШаблон("%1 %2 %3 %4 %5 %6", ДополнитьСтроку(заголовок, 15, " "), ДополнитьСтроку(слов, 9, " "), 
				ДополнитьСтроку(оп, 6, " "), ДополнитьСтроку(повторы, 10, " "), 
				ДополнитьСтроку(Формат(тестСекунд, "ЧЦ=10; ЧДЦ=6"), 10, " "), ДополнитьСтроку(Формат(мфлопс, "ЧЦ=7; ЧДЦ=1"), 8, " "));
			//fmt.Printf("%15s %9d %5d %8d %10.6f %8.0f ", заголовок, слов, оп, повторы, тестСекунд.Seconds(), мфлопс)
			
			isTestOk = Истина;
			isTestOk = проверить(хЦпу, слов, новДанные);
			
			слов = слов * 10;
			повторы = Цел(повторы / 10);
			
			Если повторы < 1 Тогда
				повторы = 1;
			КонецЕсли;
			
			Если isTestOk Тогда
				Сообщить(СтрШаблон("%1%2   Да", результат, ДополнитьСтроку(Формат(хЦпу[0], "ЧЦ=10; ЧДЦ=6"), 15, " ")));
			Иначе
				Сообщить("%1   См лог     Нет", результат);
			КонецЕсли;
		КонецЦикла;
		
		Сообщить("");
	КонецЦикла;
	
	Если НЕ isTestOk Тогда
		Сообщить(" ERROR - At least первый first результат of 0.999999 - no calculations?");
	КонецЕсли;
КонецПроцедуры

Функция ДополнитьСтроку(Знач Значение, Знач ДлинаСтроки, Знач Символ = "0", Знач Режим = "Слева") Экспорт
	// Длина символа не должна превышать единицы.
	Символ = Лев(Символ, 1);
	// Удаляем крайние пробелы слева и справа строки.
	Значение = СокрЛП(Значение);
	КоличествоСимволовНадоДобавить = ДлинаСтроки - СтрДлина(Значение);
	Если КоличествоСимволовНадоДобавить > 0 Тогда
	СтрокаДляДобавления = СформироватьСтрокуСимволов(Символ, КоличествоСимволовНадоДобавить); 
	Если ВРег(Режим) = "СЛЕВА" Тогда 
	  Значение = СтрокаДляДобавления + Значение;
	ИначеЕсли ВРег(Режим) = "СПРАВА" Тогда 
	  Значение = Значение + СтрокаДляДобавления; 
	КонецЕсли; КонецЕсли; Возврат Значение;
КонецФункции
   
Функция СформироватьСтрокуСимволов(Знач Символ, Знач ДлинаСтроки) Экспорт
	Результат = "";
	Для Счетчик = 1 По ДлинаСтроки Цикл 
	  Результат = Результат + Символ; 
	КонецЦикла; 
	Возврат Результат;
КонецФункции

хЗнач = 0.999950;
аЗнач = 0.000020;
бЗнач = 0.999980;
цЗнач = 0.000011;
дЗнач = 1.000011;
еЗнач = 0.000012;
фЗнач = 0.999992;
гЗнач = 0.000013;
шЗнач = 1.000013;
жЗнач = 0.000014;
кЗнач = 0.999994;
лЗнач = 0.000015;
мЗнач = 1.000015;
оЗнач = 0.000016;
пЗнач = 0.999996;
куЗнач = 0.000017;
рЗнач = 1.000017;
сЗнач = 0.000018;
тЗнач = 1.000018;
юЗнач = 0.000019;
вЗнач = 1.000019;
ввЗнач = 0.000021;
уЗнач = 1.000021;

новДанные = 0.999999;

заголовок = "Данные вх & вых ";
заголовокConst = "Данные конс ";
заглавие = "МП МФлопс Бенчмарк";

числоСлов = 10240; // E Number of слов in arrays
числоПовторов = 500; // R Number of repeat passes

запуститьВсё(числоПовторов, числоСлов, 3, Ложь, заглавие, заголовок);